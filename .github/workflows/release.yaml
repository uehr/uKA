name: release

on:
 push:
  tags:
    - "v*"

jobs:
  app:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Extract Envs
      run: |
        echo "::set-env name=BRANCH::${GITHUB_REF#refs/heads/}"
        echo "::set-env name=TAG::${GITHUB_REF#refs/tags/}"
        TAG=${GITHUB_REF#refs/tags/}
        echo "::set-env name=VERSION::${TAG/-*/}"
        echo "::set-env name=DEPLOY_TO::${TAG/*-/}"

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: 828752933783.dkr.ecr.ap-northeast-1.amazonaws.com
        ECR_REPOSITORY: uka-backend
        IMAGE_TAG: ${GITHUB_REF#refs/tags/}
      run: |
        docker build -t $ECR_REPOSITORY ./app
        docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
        docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:$DEPLOY_TO
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$VERSION
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$DEPLOY_TO
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$VERSION"

    - name: Apply version up to Amazon ECR
      id: apply-image
      env:
        ECS_SERVICE: uka-backend
        ECS_CLUSTER: uka-${DEPLOY_TO}
      run: |
        aws ecs update-service --force-new-deployment --service $ECS_SERVICE --cluster $ECS_CLUSTER